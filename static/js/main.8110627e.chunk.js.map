{"version":3,"sources":["modules/SearchBox.js","modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","SearchBoxC","props","updateCity","fetchWeather","onSubmit","onChange","e","target","value","placeholder","type","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","src","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","Close","button","WeatherInfoComponent","name","WeatherComponent","weather","updateWeather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","onClick","timeStamp","today","Date","getHours","getMinutes","getTime","speed","Container","AppLabel","App","useState","city","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8110627e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 20px;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: black;\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n    color: white;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nexport default function SearchBoxC(props) {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <SearchBox onSubmit={fetchWeather}>\r\n        <input\r\n          onChange={(e) => updateCity(e.target.value)}\r\n          placeholder=\"City Name\"\r\n        />\r\n        <button type={\"submit\"}>Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};","import styled from \"styled-components\";\nimport React from \"react\";\nimport SearchBoxC from \"./SearchBox\";\n\n\nconst ChooseCityLabel = styled.span`\n  color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\n\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather } = props;\n  return (\n    <>\n      <WelcomeWeatherLogo src=\"/Weather/icons/perfect-day.svg\" />\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\n      <SearchBoxC updateCity={updateCity} fetchWeather={fetchWeather} />\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { WeatherIcons } from \"../App\";\n\nexport const WeatherInfoIcons = {\n  sunset: \"/Weather/icons/temp.svg\",\n  sunrise: \"/Weather/icons/temp.svg\",\n  humidity: \"/Weather/icons/humidity.svg\",\n  wind: \"/Weather/icons/wind.svg\",\n  pressure: \"/Weather/icons/pressure.svg\",\n};\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: start;\n  width: 90%;\n  font-weight: bold;\n  font-size: 14px;\n`;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\nconst Close = styled.button`\nborder-radius: 50%;\npadding: 4px;\nfont-size: 9px;\ncolor: white;\nbackground-color: black;\nposition: relative;\ntop: -7px;\nborder: none;\n`;\n\nconst WeatherInfoComponent = (props) => {\n  const { name, value } = props;\n  return (\n    <InfoContainer>\n      <InfoIcon src={WeatherInfoIcons[name]} />\n      <InfoLabel>\n        {value}\n        <span>{name}</span>\n      </InfoLabel>\n    </InfoContainer>\n  );\n};\nconst WeatherComponent = (props) => {\n  const { weather, updateCity, updateWeather } = props;\n  const isDay = weather?.weather[0].icon?.includes('d')\n  const getTime = (timeStamp) => {\n    let today = new Date();\n    return `${today.getHours() + \" : \" + today.getMinutes()}`\n    // return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n  }\n  const clcdata = () => {\n    updateCity()\n    updateWeather()\n  }\n  return (\n    <>\n      <WeatherContainer>\n\n\n        <Condition>\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n          {`  |  ${weather?.weather[0].description}`}\n        </Condition>\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\n      </WeatherContainer>\n      <Location>{`${weather?.name}, ${weather?.sys?.country} `}\n        <Close onClick={() => { clcdata() }}>X</Close>\n      </Location>\n\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n      <WeatherInfoContainer>\n        <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\n          value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`} />\n        <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity} />\n        <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed} />\n        <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure} />\n      </WeatherInfoContainer>\n    </>\n  );\n};\n\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/Weather/icons/sunny.svg\",\n  \"01n\": \"/Weather/icons/night.svg\",\n  \"02d\": \"/Weather/icons/day.svg\",\n  \"02n\": \"/Weather/icons/cloudy-night.svg\",\n  \"03d\": \"/Weather/icons/cloudy.svg\",\n  \"03n\": \"/Weather/icons/cloudy.svg\",\n  \"04d\": \"/Weather/icons/perfect-day.svg\",\n  \"04n\": \"/Weather/icons/cloudy-night.svg\",\n  \"09d\": \"/Weather/icons/rain.svg\",\n  \"09n\": \"/weather/icons/rain-night.svg\",\n  \"10d\": \"/weather/icons/rain.svg\",\n  \"10n\": \"/weather/icons/rain-night.svg\",\n  \"11d\": \"/weather/icons/storm.svg\",\n  \"11n\": \"/weather/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\n\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {city && weather ? (\n        <WeatherComponent updateCity={updateCity} updateWeather={updateWeather} weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}