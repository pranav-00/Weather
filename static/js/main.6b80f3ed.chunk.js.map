{"version":3,"sources":["modules/SearchBox.js","modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","Isloading","div","SearchBoxC","props","updateCity","fetchWeather","isLoding","city","onSubmit","onChange","e","target","value","placeholder","type","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","src","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","Close","button","WeatherInfoComponent","name","WeatherComponent","weather","updateWeather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","onClick","timeStamp","today","Date","min","parseInt","getHours","getMinutes","getTimezoneOffset","mins","hrs","getTime","timezone","speed","Container","AppLabel","App","useState","setisLoding","a","preventDefault","Axios","get","response","data","alert","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b80f3ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 20px;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: black;\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n    color: white;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst Isloading = styled.div`\r\nborder: 7px solid #f3f3f3; /* Light grey */\r\nborder-top: 7px solid #3498db; /* Blue */\r\nborder-radius: 50%;\r\nwidth: 25px;\r\nheight: 25px;\r\nanimation: spin 2s linear infinite;\r\nheight :\r\n`;\r\n\r\nexport default function SearchBoxC(props) {\r\n  const { updateCity, fetchWeather, isLoding, city } = props;\r\n  return (\r\n    <>\r\n      {isLoding && city ?\r\n        <Isloading /> :\r\n        <SearchBox onSubmit={fetchWeather}>\r\n          <input\r\n            onChange={(e) => updateCity(e.target.value)}\r\n            placeholder=\"City Name\"\r\n          />\r\n          <button type={\"submit\"}>Search</button>\r\n        </SearchBox>}\r\n    </>\r\n  );\r\n};","import styled from \"styled-components\";\nimport React from \"react\";\nimport SearchBoxC from \"./SearchBox\";\n\n\nconst ChooseCityLabel = styled.span`\n  color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\n\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather, isLoding, city } = props;\n  return (\n    <>\n      <WelcomeWeatherLogo src=\"/Weather/icons/perfect-day.svg\" />\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\n      <SearchBoxC updateCity={updateCity} fetchWeather={fetchWeather} isLoding={isLoding} city={city} />\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { WeatherIcons } from \"../App\";\n\nexport const WeatherInfoIcons = {\n  sunset: \"/Weather/icons/temp.svg\",\n  sunrise: \"/Weather/icons/temp.svg\",\n  humidity: \"/Weather/icons/humidity.svg\",\n  wind: \"/Weather/icons/wind.svg\",\n  pressure: \"/Weather/icons/pressure.svg\",\n};\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: start;\n  width: 90%;\n  font-weight: bold;\n  font-size: 14px;\n`;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\nconst Close = styled.button`\nborder-radius: 50%;\npadding: 4px;\nfont-size: 9px;\ncolor: white;\nbackground-color: black;\nposition: relative;\ntop: -7px;\nborder: none;\n`;\n\nconst WeatherInfoComponent = (props) => {\n  const { name, value } = props;\n  return (\n    <InfoContainer>\n      <InfoIcon src={WeatherInfoIcons[name]} />\n      <InfoLabel>\n        {value}\n        <span>{name}</span>\n      </InfoLabel>\n    </InfoContainer>\n  );\n};\nconst WeatherComponent = (props) => {\n  const { weather, updateCity, updateWeather } = props;\n  const isDay = weather?.weather[0].icon?.includes('d')\n  const getTime = (timeStamp) => {\n    let today = new Date();\n    let min = parseInt(today.getHours()) * 60 + parseInt(today.getMinutes()) + today.getTimezoneOffset() + (timeStamp / 60)\n    let mins = min % 60;\n    let hrs = parseInt(min / 60);\n\n    if (mins < 0) {\n      hrs = 23 + hrs;\n      mins = 60 + mins;\n      return `${hrs + \" : \" + mins}`\n    } else if (hrs > 23) {\n      hrs = hrs - 24;\n      return `${hrs + \" : \" + mins}`\n    } else {\n      return `${hrs + \" : \" + mins}`\n    }\n  }\n  const clcdata = () => {\n    updateCity()\n    updateWeather()\n  }\n  return (\n    <>\n      <WeatherContainer>\n\n\n        <Condition>\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n          {`  |  ${weather?.weather[0].description}`}\n        </Condition>\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\n      </WeatherContainer>\n      <Location>{`${weather?.name}, ${weather?.sys?.country} `}\n        <Close onClick={() => { clcdata() }}>X</Close>\n      </Location>\n\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n      <WeatherInfoContainer>\n        <WeatherInfoComponent name={isDay ? \"sunrise\" : \"sunset\"}\n          value={`${getTime(weather?.timezone)}`} />\n        <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity} />\n        <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed} />\n        <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure} />\n      </WeatherInfoContainer>\n    </>\n  );\n};\n\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/Weather/icons/sunny.svg\",\n  \"01n\": \"/Weather/icons/night.svg\",\n  \"02d\": \"/Weather/icons/day.svg\",\n  \"02n\": \"/Weather/icons/cloudy-night.svg\",\n  \"03d\": \"/Weather/icons/cloudy.svg\",\n  \"03n\": \"/Weather/icons/cloudy.svg\",\n  \"04d\": \"/Weather/icons/perfect-day.svg\",\n  \"04n\": \"/Weather/icons/cloudy-night.svg\",\n  \"09d\": \"/Weather/icons/rain.svg\",\n  \"09n\": \"/weather/icons/rain-night.svg\",\n  \"10d\": \"/weather/icons/rain.svg\",\n  \"10n\": \"/weather/icons/rain-night.svg\",\n  \"11d\": \"/weather/icons/storm.svg\",\n  \"11n\": \"/weather/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\n\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const [isLoding, setisLoding] = useState(false)\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    if (city) {\n      setisLoding(true)\n      try {\n        const response = await Axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n        )\n        updateWeather(response.data);\n      } catch (error) {\n        alert(`${city} is not a name of city`);\n        updateCity(\"\")\n      }\n      setisLoding(false)\n    }\n  };\n\n  console.log(weather);\n  console.log(weather?.timezone);\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {city && weather ? (\n        <WeatherComponent updateCity={updateCity} updateWeather={updateWeather} weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} isLoding={isLoding} city={city} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}